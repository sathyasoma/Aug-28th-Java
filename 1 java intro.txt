JAVA
								 
								 
DAY 1: APRIL 1ST
======================================================
NATURAL LANGUAGES(ENGLISH,TELUGU,TAMIL,URDU...)-COMMUNICATING IN BETWEEN HUMAN BEINGS

SIGN LANGUAGES--> 

PROGRAMMING LANGUGAE --> COMMUNICATING WITH MACHINE TO PERFORM SOME ACTION

USING PROGRAMMING LANGUAGES WHAT WE CAN DEVELOP?

   ->SOFTWARE/APPLICATION
   
   ATM APPLICATION
   CALCULATOR APPLICATION
   BILLING MACHINE/APPLICATION
   
   
WHAT TYPE OF APPLICATIONS WE HAVE IN THE IT INDUSTRY?

     1.STANDALONE/DESKTOP APPLICATIONS-ANTIVIRUS,CALCULATOR,ACROBATIC READER...
	 2.DISTRIBUTED/NETWORK BASED APPLICATIONS-FACEBOOK,GMAIL,AMAZON,FLIPKART...
	 
	 
	 
DESKTOP APPLICATIONS RESULTS WON'T BE SHARABLE ACROSS THE GLOBE

DISTRIBUTED APPLICATIONS RESULTS SHARABLE ACROSS THE GLOBE.

	 
	*DIFFERENT TYPES OF  PROGRAMMING LANGUAGES WE HAVE*
=========================================================
	
	1.PROCEDURE ORIENTED (C,fortran, cobal,pascal,algol,basic)
	2.OBJECT ORIENTED(JAVA,PYTHON,PHP..)
	3.SCRIPTING ORIENTED:javascript
	4.MODULA ORIENTED.(MODULA)
	
	
	

WHAT IS JAVA?
=========================

 ->OBJECT ORIENTED PROGRAMMING LANGUAGE FOR THE PURPOSE OF DEVELOPING
   BOTH STANDALONE AND DISTRIBUTED APPLICATIONS.
   
   
JAVA -> 1995 --> JAMES GOSLING(13 MEMBERS TEAM) --> SUNMICROSYSTEM  

RECENT YEARS -> ALL THE COPYRIGHTS OF SUNMICROSYSTEM OWNS BY ORACLE CORPORATION.

 
 IN TO THE MARKET WHILE THEY RELEASING, THEY HAVE RELEASED IN THREE EDITIONS
 
 
  1.JSE(JAVA STANDARD EDITION) --> CORE JAVA  -> STANDALONE APPLICATIONS
  2.JEE(JAVA ENTERPRISE EDITION) -->ADVANCED JAVA ->BOTH STANDALONE & DISTRIBUTED
  3.JME(JAVA MICRO/MOBILE EDITION) -->MOBILE APPLICATIONS/MICRO APPLICATIONS
  
  
SIGNIFACNCE/IMPORTANCE OF LEARNING CORE JAVA:
================================================
->TO DEVELOP STANDALONE APPLICATIONS
->TO LEARN ADVANCED JAVA
->TO LEARN HIGH END TECHNOLGOIES(HADOOP,SALESFORCE,TABLEU,PEGA,...)

FROM THE PAST 26 YEARS JAVA IS MAINTAING IT'S POPULARITY.
JAVA HAS IT'S OWN UNIQUE PRINCIPLES/CHARACTERSITICS.

JAVA PRINCIPLES/CHARACTERSITICS/BUZZWORDS/
=======================================
SIMPLE
PLATFORM INDEPENDENT
ARCHITECTURAL NEUTRAL
PORTABLE
MULTI THREADED
DYNAMIC
NETWORKED
DISTRIBUTED
OBJECT ORIENTED
ROBUST
..
..
..

In java if we write any program, what we require.


java - open source(with free of cost)

official website for java related sources --> www.oracle.com

Java SE 16 is the latest release for the Java SE Platform

java se 8 is the stable version




Prerequistes of writing java program:
======================================
c program -> c software -> turbo c

cpp program --> cpp software -> turbo cpp

java program --> java software --> jdk(java development kit)

1.download the jdk software from the www.oracle.com
2.install the jdk 
3.select the editor(notepad/notepad++,eclipse,netbeans,intellij)
4.write the java program
5.save the java program(<filename>.java)
6.compile the java program
7.execute/run the java program->output



DAY=2:
=================================================================

once you install java software(Jdk), to check whether it get's installed successully

or not, we have to open command prompt, and pass below command


cmd:/> java -version

java version "1.8.0_221"
Java(TM) SE Runtime Environment (build 1.8.0_221-b11)
Java HotSpot(TM) 64-Bit Server VM (build 25.221-b11, mixed mode)


java is case-sensitive


structure of java program:
===========================
class <classname>
{
 public static void main(String[] args)
 {
 //logic
 }
 
}
 
 ->java program should always starts from by defining class.
 ->class is a java reserved keyword(all the java reserved keywords must be in lower case)
 ->java program execution starts from main()
      public static void main(String[] args)
	  {
	  }
 
example:
``
class Demo
{
 public static void main(String[] args)
 {
   //logic
   System.out.println("welcome to java standard edition");
 }
}
 
 
 java programming langugae is unicode international language
 
 (it supports 18 international languages)
 

compile the java program:
`````

jdk (java compiler)

->it will convert .java code(source code) to .class filename(byte code)

byte code contains machine level code

byte code is generated by java compiler

how can we compile the java program:
```````

syntax:

   javac <filename>.java

   javac Welcome.java
   

.class file is generated based on class name(Demo.class)


syntax for how to execute the program:
`````
   java <classname>
   
   java Demo
   
   
 java program gets executed by jvm(java virtual machine)

 when we execute the javaprogram,jvm internally calls main() and after
 logic gets executed.
 
 java compiler will convert our source code to byte code
 jvm will convert byte code to machine level code
 
 
D:\jse>javac Welcome.java
'javac' is not recognized as an internal or external command,
operable program or batch file.
  
what is path:
`
path is the location where all the java tools are available


------C:\Program Files\Java\jdk1.8.0_221\bin------


how to set the path:
======================
->right click on mycomputer
->click on properties
->Click on advanced system settings
->click on environment variables
->click on new button of system variables
-> give variable name as path and variable value as 
   C:\Program Files\Java\jdk1.8.0_221\bin
   
->click on ok(3 times)


DAY-3:
==================================================================
JAVA PRINCIPLES/CHARACTERSITICS/BUZZWORDS/
```````
SIMPLE
PLATFORM INDEPENDENT
ARCHITECTURAL NEUTRAL
PORTABLE
MULTI THREADED
DYNAMIC
NETWORKED
DISTRIBUTED
OBJECT ORIENTED
ROBUST
interpreted
secured
   
why java is simple:
````
-java syntax is based on c++
-java has removed many complicated concepts for ex pointers , operator
 overloading
-there is no need to remove unrefernced objects because
 there is an automatic garbage collection in java.
 
 
 object oriented:
 ````
 ->since it follows oops principles which were given by
   omg(object management group)-canadian organization
   
 ->everything in java is an object
 
 
oops principles:
`` 
   1.inheritance
   2.polymoprhism
   3.abstraction
   4.encapsulation
   
platform independent:
````
.c -> .exe

.java -> .class(byte code)-> windows operating system

 software(antivirus)-java programs(source code).java
 
 .class files (setup file)
 
 
 windows 
   
    quickheal
	
	
 mac
    
 
   
 
   we purchase the 

pendrive(.class file)

unix os

operating system to operating system that bytecode is also gets converted
in case of java.

java slogan -> wora(write once and run anywhere)


->java code can be run on multiple platforms, for ex , windows, linux,mac.

->java is compiled by the compiler and convereted into byte code.

->this bytecode is a platform - independent code because it can be run on 
  multiple platforms..
  
  
secured:
``
with java , we can develop virus-free systems.

 -> no explict pointer
 -> java programs run inside a virtual machine sandbox(jvm) 
 ->classloader:it's part of jre ->used to load classes into the jvm      dynamically.it adds security for the classes of the local file system 
 ->security manager: it determines what resources a class can access such as 
   reading and writing to the local disk.
   
 
robust:
`
->strong 


->it uses strong memeory management.

->lack of pointers that avoids secirity problems

->automatic garbage collection

->exception handling and type checking 
 

architectural neutral:
````
int-2 bytes(c program)-windows 32 bit
int- 4 bytes (c program)-windows 64 bit

size of the primitive types is fixed


portable:
```
portable ==> platform independent + architectural neutral


distributed:
`0
jee->java enterprise edition

  RMI
  EJB
    ->distributed applications.
	
we can access any files from any machine on the internet.

multithreaded:
`````
cheking my bus services from origin place to destination place

a thred is like a separate programs.

executing concurrently(parallely)
